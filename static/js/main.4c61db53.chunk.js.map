{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","NONE","Error","reverse","console","log","App","state","sortByAlphabet","setState","sortByLength","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAGzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MAGF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UACzD,MAGF,KAAKb,EAASc,KACZ,MAGF,QAGE,MAAM,IAAIC,MAAJ,8BAFyBX,IAYnC,OANIC,GACFC,EAAaU,UAGfC,QAAQC,IAAId,EAAUC,GAEfC,G,SAhDJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyDE,IAAMmB,EAAb,4MACEC,MAAQ,CACNf,YAAY,EACZD,SAAUJ,EAASc,MAHvB,EAMEO,eAAiB,WACf,EAAKC,SAAS,CACZlB,SAAUJ,EAASO,YARzB,EAYEgB,aAAe,WACb,EAAKD,SAAS,CACZlB,SAAUJ,EAASY,UAdzB,EAkBEI,QAAU,WACR,EAAKM,UAAS,SAAAF,GAAK,MAAK,CACtBf,YAAae,EAAMf,gBApBzB,EAwBEmB,MAAQ,WACN,EAAKF,SAAS,CACZjB,YAAY,EACZD,SAAUJ,EAASc,QA3BzB,4CA+BE,WACE,MAAiCW,KAAKL,MAA9Bf,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAUpB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,0BACVE,QAASH,KAAKJ,eAHhB,iCAQA,wBACEM,KAAK,SACLD,UAAU,6BACVE,QAASH,KAAKF,aAHhB,4BAQA,wBACEI,KAAK,SACLD,UAAU,6BACVE,QAASH,KAAKT,QAHhB,uBA1Be,IAAfX,GAAwBD,IAAaJ,EAASc,OAmC5C,wBACEa,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAWJ,6BACGtB,EAAkBD,EAAiB,CAClCG,WACAC,eACCwB,KAAI,SAAAC,GAAI,OACT,6BAAgBA,GAAPA,eAtFrB,GAAyBC,IAAMC,WCxE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4c61db53.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPHABET: {\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    }\n\n    case SortType.LENGTH: {\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    }\n\n    case SortType.NONE: {\n      break;\n    }\n\n    default: {\n      const exhaustiveCheck: never = sortType;\n\n      throw new Error(`Unhandled sortType: ${exhaustiveCheck}`);\n    }\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const IsActiveResetButton = () => {\n      if (isReversed === false && sortType === SortType.NONE) {\n        return false;\n      }\n\n      return true;\n    };\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-info is-light\"\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-success is-light\"\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {IsActiveResetButton() && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, {\n            sortType,\n            isReversed,\n          }).map(good => (\n            <li key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}